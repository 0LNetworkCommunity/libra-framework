name: rust ci

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"
    branches:
      - "release**"
      - "main"
      - "ci"
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - "release**"
      - "main"
env:
  DIEM_FORGE_NODE_BIN_PATH: ${{github.workspace}}/diem-node
  LIBRA_CI: 1
  MODE_0L: "TESTNET"

jobs:
  build-framework:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env
      - name: build framework
        working-directory: ./framework
        run: cargo r release

  types:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env

      # fail fast if types doesnt compile, everything else will fail.
      - name: types
        working-directory: ./types
        run: cargo test --no-fail-fast
  wallet:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env
      - name: wallet
        if: always()
        working-directory: ./tools/wallet
        run: cargo test --no-fail-fast

  smoke:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env
      # Check test suite meta tests
      - name: smoke-tests # NOTE: needs working DIEM_FORGE_NODE_BIN_PATH
        if: always()
        working-directory: ./smoke-tests
        run: cargo test --no-fail-fast

  query:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env

      # Tools tests (some use smoke-tests)
      - name: query
        if: always()
        working-directory: ./tools/query
        run: cargo test --no-fail-fast

  genesis:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env
      - name: genesis
        if: always()
        working-directory: ./tools/genesis
        run: cargo test --no-fail-fast

  tower:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env
      - name: tower
        if: always()
        working-directory: ./tools/tower
        run: cargo test --no-fail-fast

  txs:
    needs: [build-framework]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup env
        uses: ./.github/actions/build_env

      - name: txs
        if: always()
        working-directory: ./tools/txs
        # NOTE: upgrade tests which compile Move code, and then submit in the same thread will cause a stack overflow with the default rust stack size.
        run: RUST_MIN_STACK=104857600 cargo test --no-fail-fast
