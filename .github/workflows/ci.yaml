name: ci

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
      - 'ci*'
    branches:
      - 'main'
      # - 'ci'
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - 'release**'
      - 'main'
env:
  DIEM_FORGE_NODE_BIN_PATH: ${{github.workspace}}/diem-node
  LIBRA_CI: 1
  MODE_0L: "TESTNET"
  SCCACHE_BUCKET: sccache-libra
  SCCACHE_ENDPOINT: https://afcdb03dd0764818ac9aec7fe0c0b8b5.r2.cloudflarestorage.com/sccache-libra
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  SCCACHE_REGION: auto

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    # NOTE: for debugging CI this allow shell access to github runner. Will print out tmate.io terminal url
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true
      timeout-minutes: 15


    - name: setup env
      uses: 0o-de-lally/libra-v7/.github/actions/build_env@ci

    - name: install zapatos-node (for smoke tests)
      run: >
        wget -O $DIEM_FORGE_NODE_BIN_PATH https://github.com/0LNetworkCommunity/diem/releases/latest/download/diem-node &&
        sudo chmod 755 $DIEM_FORGE_NODE_BIN_PATH &&
        echo $DIEM_FORGE_NODE_BIN_PATH &&
        ls -l $DIEM_FORGE_NODE_BIN_PATH

    - name: install zapatos (for move tests)
      run: >
        wget -O ${{github.workspace}}/diem https://github.com/0LNetworkCommunity/diem/releases/latest/download/diem &&
        sudo chmod 755 ${{github.workspace}}/diem

    - name: set sccache
    # don't do this before because somethings may not build inluding sccache itself.
      run: export RUSTC_WRAPPER=sccache
    # Move framework tests
    - name: move framework
      if: always()
      working-directory: ./framework/libra-framework
      run: ${{github.workspace}}/diem move test

    # Check test suite meta tests
    - name: smoke-tests # NOTE: needs working DIEM_FORGE_NODE_BIN_PATH
      if: always()
      working-directory: ./smoke-tests
      run: cargo test --no-fail-fast

    # Tools tests
    - name: genesis
      if: always()
      working-directory: ./tools/genesis
      run: cargo test --no-fail-fast

    - name: wallet
      if: always()
      working-directory: ./tools/wallet
      run: cargo test --no-fail-fast

    - name: query
      if: always()
      working-directory: ./tools/query
      run: cargo test --no-fail-fast

    - name: tower
      if: always()
      working-directory: ./tools/tower
      run: cargo test --no-fail-fast

    - name: txs
      if: always()
      working-directory: ./tools/txs
      run: cargo test --no-fail-fast